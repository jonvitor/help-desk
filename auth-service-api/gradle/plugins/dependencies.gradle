repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
    set('springCloudVersion', "2024.0.1") // Atualizado para compatibilidade com Java 21
}

dependencies {
    implementation('org.springframework.boot:spring-boot-actuator') {
        because('Starter para monitoramento e gerenciamento de aplicações Spring Boot')
    }

    implementation('org.springframework.boot:spring-boot-starter-web') {
        because('Starter para criar aplicação web, incluindo aplicação RESTful, usando Spring MVC. Usa Tomcat como container padrão.')
    }

    implementation('org.springframework.cloud:spring-cloud-starter-config') {
        because('Starter para integrar com o Spring Cloud Config Server')
    }

    implementation('org.springframework.cloud:spring-cloud-starter-bootstrap') {
        because('Starter para integrar com o Spring Cloud Config Server')
    }

     implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') {
         because('Starter para integrar com o Spring Cloud Eureka Server')
     }

    implementation('org.springframework.boot:spring-boot-starter-data-mongodb') {
        because('Starter para integrar com o MongoDB')
    }

    implementation('org.springframework.boot:spring-boot-starter-validation') {
        because('Starter para validação de dados')
    }

    implementation('br.com.joao:hd-commons-lib:1.0.0') {
        because('Lib para compartilhar código comum entre os projetos')
    }

    implementation('org.springframework.boot:spring-boot-starter-security') {
        because('Starter para integrar com o Spring Security')
    }

    implementation('io.jsonwebtoken:jjwt-api:0.11.5')
    implementation('io.jsonwebtoken:jjwt-impl:0.11.5')
    implementation('io.jsonwebtoken:jjwt-jackson:0.11.5') // Para suporte a JSON

    implementation('jakarta.xml.bind:jakarta.xml.bind-api:4.0.0') {
        because('JAXB API - versão mais recente para compatibilidade com Java 21')
    }

    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4') {
        because('Starter para integrar com o SpringDoc OpenAPI e adicionar documentação ao projeto')
    }

    // Lombok - Redução de código boilerplate
    compileOnly 'org.projectlombok:lombok:1.18.30' // Atualizado para Java 21
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // MapStruct - Mapeamento de objetos Java
    implementation 'org.mapstruct:mapstruct:1.5.5.Final' // Atualizado
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final' // Atualizado

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        because('Spring Boot Test Starter')
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}